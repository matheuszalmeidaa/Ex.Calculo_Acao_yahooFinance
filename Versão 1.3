import pandas as pd
import pandas_datareader.data as pdr
import yfinance
import time

yfinance.pdr_override()


ativos = []
print ('Digite o nome das ações abaixo! Para sair, basta digitar sair no campo')
time.sleep(2)
print('Exemplos de ações para teste da aplicação: ^BVSP, VALE3.SA, PETR3.SA')
time.sleep(1)
print()

i=0
while 1:
     i+=1
     time.sleep(2)
     incluir = input('Digite o nome da ação requisitada %d : '%i)
     if incluir =='SAIR' or incluir =='Sair' or incluir =='sair' :
         break
     ativos.append(incluir)

print()
time.sleep(2)
print('Abaixo insira as datas no seguinte formato aaaa-mm-dd | Ex: 2000-01-01')
time.sleep(3)
data_inicial = input('Data inicial da aplicação: ')
time.sleep(0.5)
data_final = input('Data final da aplicação:')
print('Carregando dados...')
time.sleep(2)
print()

tabela_cotaçoes = pdr.get_data_yahoo(ativos, data_inicial, data_final)["Adj Close"]
tabela_cotaçoes_formatada = tabela_cotaçoes.round(2)

tabela_cotação_ganho_final = tabela_cotaçoes.iloc[-1] - tabela_cotaçoes.iloc[0]
formatação_ganho_final = round(tabela_cotação_ganho_final, 2)
tabela_cotação_ganho_final = tabela_cotação_ganho_final.apply(lambda x: round(x, 2))

print('A ação com maior ganho ou menor será:',(max(ativos)),'\n' ,(max(tabela_cotação_ganho_final)),'total de ganho neste periodo')
print()

if i >= 2 :
  print('Respectivos ganhos ou perdas das ações escolhidas:')
  print(formatação_ganho_final)
else:
  print('Respectivos ganhos ou perdas da ação escolhida:')
  print(formatação_ganho_final)
 

print()
print('Formatando gráfico...')
time.sleep(5)
tabela_cotaçoes_redigidas = tabela_cotaçoes / tabela_cotaçoes.iloc[0]
formatted_table = tabela_cotaçoes_redigidas.applymap(lambda x: '{:.2f}'.format(x))
print(formatted_table)
tabela_cotaçoes_redigidas.plot()
